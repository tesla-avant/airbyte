apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.scheduler.metadataName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      airbyte: {{ .Values.scheduler.label }}
  template:
    metadata:
      labels:
        airbyte: {{ .Values.scheduler.label }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      automountServiceAccountToken: true
      containers:
        - name: {{ .Values.scheduler.name }}
          image: "{{ .Values.image.scheduler }}:{{ .Values.image.tag }}"
          env:
            - name: AIRBYTE_VERSION
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: AIRBYTE_VERSION
            - name: CONFIG_ROOT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: CONFIG_ROOT
            - name: DATABASE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: DATABASE_PASSWORD
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: DATABASE_URL
            - name: DATABASE_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: DATABASE_USER
            - name: TRACKING_STRATEGY
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: TRACKING_STRATEGY
            - name: WAIT_BEFORE_HOSTS
              value: "5"
            - name: WAIT_HOSTS
              value: {{ .Values.db.service.name }}:{{ .Values.db.postgres.port }}
            - name: WAIT_HOSTS_TIMEOUT
              value: "45"
            - name: WORKSPACE_DOCKER_MOUNT
              value: workspace
            - name: WORKSPACE_ROOT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: WORKSPACE_ROOT
            - name: WORKER_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: WORKER_ENVIRONMENT
            - name: LOCAL_ROOT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: LOCAL_ROOT
            - name: WEBAPP_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: WEBAPP_URL
            - name: TEMPORAL_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: TEMPORAL_HOST
            - name: TEMPORAL_WORKER_PORTS
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: TEMPORAL_WORKER_PORTS
            - name: S3_LOG_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: S3_LOG_BUCKET
            - name: S3_LOG_BUCKET_REGION
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: S3_LOG_BUCKET_REGION
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: AWS_SECRET_ACCESS_KEY
          ports:
            - containerPort: 9000 # for heartbeat server
            - containerPort: 9001 # start temporal worker port pool
            - containerPort: 9002
            - containerPort: 9003
            - containerPort: 9004
            - containerPort: 9005
            - containerPort: 9006
            - containerPort: 9007
            - containerPort: 9008
            - containerPort: 9009
            - containerPort: 9010
            - containerPort: 9011
            - containerPort: 9012
            - containerPort: 9013
            - containerPort: 9014
            - containerPort: 9015
            - containerPort: 9016
            - containerPort: 9017
            - containerPort: 9018
            - containerPort: 9019
            - containerPort: 9020
            - containerPort: 9021
            - containerPort: 9022
            - containerPort: 9023
            - containerPort: 9024
            - containerPort: 9025
            - containerPort: 9026
            - containerPort: 9027
            - containerPort: 9028
            - containerPort: 9029
            - containerPort: 9030 # end temporal worker port pool
          volumeMounts:
            - name: {{ .Values.persistence.volumeConfigs.volumeName }}
              mountPath: {{ .Values.persistence.volumeConfigs.mountPath }}
            - name: {{ .Values.persistence.workspace.volumeName }}
              mountPath: {{ .Values.persistence.workspace.mountPath }}
            - name: {{ .Values.configmap.configName }}
              mountPath:  {{ .Values.configmap.mountPath }}
              readOnly: true
      initContainers:
        - name: {{ .Values.seed.name }}
          image: "{{ .Values.image.seed }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["/bin/sh"]
          args:
            [
              "-c",
              "mkdir -p /configs/config && yes n | cp -r -i /app/seed/config /configs",
            ]
          volumeMounts:
            - name: {{ .Values.persistence.volumeConfigs.volumeName }}
              mountPath: {{ .Values.persistence.volumeConfigs.mountPath }}
            - name: {{ .Values.persistence.workspace.volumeName }}
              mountPath: {{ .Values.persistence.workspace.mountPath }}
            - name: {{ .Values.configmap.configName }}
              mountPath:  {{ .Values.configmap.mountPath }}
              readOnly: true
      volumes:
        - name: {{ .Values.persistence.workspace.volumeName }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.workspace.volumeName }}
        - name: {{ .Values.persistence.volumeConfigs.volumeName }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.volumeConfigs.volumeName }}
        - name: {{ .Values.configmap.configName }}
          configMap:
            name: {{ .Values.configmap.configName }}