apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.webapp.service.name }}
spec:
  type: {{ .Values.webapp.service.type }}
  ports:
    - port: {{ .Values.webapp.service.port }}
      protocol: {{ .Values.webapp.service.protocol }}
  selector:
    airbyte: {{ .Values.webapp.label }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.webapp.metadataName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      airbyte: {{ .Values.webapp.label }}
  template:
    metadata:
      labels:
        airbyte: {{ .Values.webapp.label }}
    spec:
      containers:
        - name: {{ .Values.webapp.name }}
          image: "{{ .Values.image.webapp }}:{{ .Values.image.tag }}"
          env:
            - name: AIRBYTE_VERSION
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: AIRBYTE_VERSION
            - name: API_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: API_URL
            - name: TRACKING_STRATEGY
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: TRACKING_STRATEGY
            - name: PAPERCUPS_STORYTIME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: PAPERCUPS_STORYTIME
            - name: FULLSTORY
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: FULLSTORY
            - name: IS_DEMO
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Values.configmap.configName }}"
                  key: IS_DEMO
            - name: INTERNAL_API_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.configmap.configName }}
                  key: INTERNAL_API_HOST
          ports:
            - containerPort: {{ .Values.webapp.service.port }}
          volumeMounts:
            - name: {{ .Values.configmap.configName }}
              mountPath:  {{ .Values.configmap.configRoot }}
              readOnly: true
      volumes:
        - name: {{ .Values.configmap.configName }}
          configMap:
            name: {{ .Values.configmap.configName }}